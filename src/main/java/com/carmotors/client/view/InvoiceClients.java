/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.carmotors.client.view;



import javax.swing.table.DefaultTableModel;
import com.carmotors.invoice.dao.InvoiceDAO;
import com.carmotors.invoice.model.Invoice;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.JOptionPane;

/**
 *
 * @author camper
 */
public class InvoiceClients extends javax.swing.JPanel {
private DefaultTableModel model;

    public InvoiceClients() {
        initComponents();
        
        // Inicializa el modelo de la tabla
        model = (DefaultTableModel) TablaEmpleados.getModel();
        
        // Cargar todas las facturas cuando se inicia el panel
        loadData(); 
    }

    // Cargar las facturas en la tabla
    private void loadData() {
    try {
        // Limpiar la tabla antes de cargar nuevos datos
        model.setRowCount(0);
        // Obtener la lista de facturas de la base de datos
        List<Invoice> invoices = InvoiceDAO.getInstance().getAll();
        // Llenar la tabla con los datos
        for (Invoice invoice : invoices) {
            model.addRow(new Object[]{
                invoice.getId(),
                invoice.getClientName(),
                String.format("%.2f", invoice.getTotal()),
                invoice.getIssueDate()
            });
        }
    } catch (SQLException ex) {
        Logger.getLogger(InvoiceClients.class.getName()).log(Level.SEVERE, null, ex);
    }
    }

    // Método de búsqueda por ID de factura
    private void searchInvoice() {
    try {
        String searchText = txtBuscar.getText().trim();
        if (searchText.isEmpty()) {
            loadData(); // Si el campo de búsqueda está vacío, recarga todos los datos
            return;
        }

        // Busca las facturas por nombre del cliente
        List<Invoice> invoices = InvoiceDAO.getInstance().getInvoicesByClientName(searchText);

        // Limpiar la tabla antes de mostrar los resultados
        model.setRowCount(0);

        if (!invoices.isEmpty()) {
            // Llenar la tabla con las facturas encontradas
            for (Invoice invoice : invoices) {
                model.addRow(new Object[]{
                    invoice.getId(),
                    invoice.getClientName(),
                    String.format("%.2f", invoice.getTotal()),
                    invoice.getIssueDate()
                });
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontraron facturas para el cliente: " + searchText);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al buscar la factura: " + e.getMessage());
    }
}


    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaEmpleados = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(656, 725));
        setLayout(new java.awt.BorderLayout());

        bg.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 30)); // NOI18N
        jLabel1.setText("FACTURAS POR NUMERO DE NOMBRE");

        TablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Factura", "Nombre Cliente", "Total", "Fecha"
            }
        ));
        jScrollPane1.setViewportView(TablaEmpleados);

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });

        jLabel2.setText("BUSCAR");

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(836, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        add(bg, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
searchInvoice(); 
    }//GEN-LAST:event_txtBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaEmpleados;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
