/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.carmotors.maintenance.view;
// Hi

import javax.swing.table.DefaultTableModel;
import com.carmotors.inventory.controller.SparePartController;
import com.carmotors.inventory.model.SparePart;
import java.util.List;
import javax.swing.JTable;
import com.carmotors.maintenance.controller.MaintenanceServiceController;
import com.carmotors.maintenance.dao.MaintenanceServiceDAO;
import com.carmotors.maintenance.model.MaintenanceService;

/**
 *
 * @author camper
 */
public class ServiceList extends javax.swing.JPanel {

    DefaultTableModel modelo = new DefaultTableModel();
    private final MaintenanceServiceController controller = new MaintenanceServiceController();

    public ServiceList() {
        initComponents();
        
        
        cargarTabla(); // Carga inicial
    txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            filtrarTabla();
        }
    });
    }

    private void filtrarTabla() {
    String texto = txtBuscar.getText().trim().toLowerCase();
    if (texto.isEmpty()) {
        cargarTabla(); // Si no hay texto, mostrar todo
        return;
    }

    try {
        List<MaintenanceService> resultado = controller.obtenerTodos(); // No hay búsqueda directa, se filtra manualmente
        String[] columnas = {
            "ID", "ID Cliente", "ID Vehículo", "Tipo", "Descripción",
            "Costo Mano de Obra", "Estado", "Fecha Inicio", "Fecha Fin", "ID Técnico"
        };
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        for (MaintenanceService s : resultado) {
            // Filtramos por coincidencia parcial en tipo o descripción
            if (s.getType().toLowerCase().contains(texto) || 
                s.getDescription().toLowerCase().contains(texto)) {

                Object[] fila = {
                    s.getId(),
                    s.getIdClient(),
                    s.getVehicleId(),
                    s.getType(),
                    s.getDescription(),
                    s.getLaborCost(),
                    s.getStatus(),
                    s.getStartDate(),
                    s.getEndDate(),
                    s.getTechnicianId()
                };
                modelo.addRow(fila);
            }
        }

        TablaEmpleados.setModel(modelo);

    } catch (Exception e) {
        e.printStackTrace();
        javax.swing.JOptionPane.showMessageDialog(this, "Error al filtrar servicios: " + e.getMessage());
    }
}
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaEmpleados = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(656, 725));
        setLayout(new java.awt.BorderLayout());

        bg.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 30)); // NOI18N
        jLabel1.setText("SERVICIOS");

        TablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TablaEmpleados);

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });

        jLabel2.setText("BUSCAR");

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 1151, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        add(bg, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void cargarTabla() {
    try {
        MaintenanceServiceDAO dao = MaintenanceServiceDAO.getInstance();
        List<MaintenanceService> lista = dao.getAll();

        String[] columnas = {
            "ID", "ID Cliente", "ID Vehículo", "Tipo", "Descripción", 
            "Costo Mano de Obra", "Estado", "Fecha Inicio", "Fecha Fin", "ID Técnico"
        };
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        for (MaintenanceService s : lista) {
            Object[] fila = {
                s.getId(),
                s.getIdClient(),
                s.getVehicleId(),
                s.getType(),
                s.getDescription(),
                s.getLaborCost(),
                s.getStatus(),
                s.getStartDate(),
                s.getEndDate(),
                s.getTechnicianId()
            };
            modelo.addRow(fila);
        }

        TablaEmpleados.setModel(modelo);

        // Ajustar tamaños de columna (opcional)
        TablaEmpleados.getColumnModel().getColumn(0).setPreferredWidth(40);   // ID
        TablaEmpleados.getColumnModel().getColumn(1).setPreferredWidth(80);   // ID Cliente
        TablaEmpleados.getColumnModel().getColumn(2).setPreferredWidth(80);   // ID Vehículo
        TablaEmpleados.getColumnModel().getColumn(3).setPreferredWidth(100);  // Tipo
        TablaEmpleados.getColumnModel().getColumn(4).setPreferredWidth(200);  // Descripción
        TablaEmpleados.getColumnModel().getColumn(5).setPreferredWidth(120);  // Costo
        TablaEmpleados.getColumnModel().getColumn(6).setPreferredWidth(100);  // Estado
        TablaEmpleados.getColumnModel().getColumn(7).setPreferredWidth(150);  // Fecha inicio
        TablaEmpleados.getColumnModel().getColumn(8).setPreferredWidth(150);  // Fecha fin
        TablaEmpleados.getColumnModel().getColumn(9).setPreferredWidth(100);  // Técnico

    } catch (Exception e) {
        e.printStackTrace();
        javax.swing.JOptionPane.showMessageDialog(this, "Error al cargar servicios: " + e.getMessage());
    }
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaEmpleados;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
